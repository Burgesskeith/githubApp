{"ast":null,"code":"import _slicedToArray from\"/Users/keithburgess/Desktop/THSFolders/github-app-functional-backup/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef,useReducer}from\"react\";// const About = (props) => {\n//   const [state, setState] = useState({ count: 0, fruit: \"Banana\" });\n//   useEffect(() => {\n//     console.log(\"Rerender\");\n//   });\n//   function increaseCount() {\n//     setState((prevState) => {\n//       return { ...prevState, count: prevState.count + 1 };\n//     });\n//   }\n//   function decreaseCount() {\n//     setState((prevState) => {\n//       return { ...prevState, count: prevState.count - 1 };\n//     });\n//   }\n//   return (\n//     <div>\n//       <h1>About Page From Functional</h1>\n//       <p>Something About {state.fruit} </p>\n//       <p>The count is {state.count}</p>\n//       <button onClick={increaseCount}>Increase</button>\n//       <br />\n//       <button onClick={decreaseCount}>Decrease </button>\n//     </div>\n//   );\n// };\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var About=function About(){// componentDidMount() {\n//   document.title = `You clicked ${this.state.count} times`;\n// }\n// componentDidUpdate() {\n//   document.title = `You clicked ${this.state.count} times`;\n// }\nfunction reducer(state,action){switch(action.type){case\"INCREMENT\":var newState={count:state.count+1};return newState;case\"DECREMENT\":return{count:state.count-1};default:throw Error(\"State Logic is Messed Up\");}}var _useReducer=useReducer(reducer,{count:0}),_useReducer2=_slicedToArray(_useReducer,2),appState=_useReducer2[0],dispatch=_useReducer2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOnline=_useState2[0],setIsOnline=_useState2[1];var ref=useRef(0);useEffect(function(){ref.current++;console.log(\"Effect\",ref);return function cleanUp(){// Check for the condition`\nconsole.log(\"Clean Up\",ref);};});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"You clicked \",appState.count,\" times\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return dispatch({type:\"INCREMENT\"});},children:\"Increase\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return dispatch({type:\"DECREMENT\"});},children:\"Decrease\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status \",isOnline?\"Online\":\"Offline\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return setIsOnline(function(prev){return!prev;});},children:[\"Click to \",isOnline?\"go offline\":\"go Online\"]})]});};export default About;","map":{"version":3,"sources":["/Users/keithburgess/Desktop/THSFolders/github-app-functional-backup/src/Components/Layout/About.js"],"names":["React","useState","useEffect","useRef","useReducer","About","reducer","state","action","type","newState","count","Error","appState","dispatch","isOnline","setIsOnline","ref","current","console","log","cleanUp","prev"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,CAA6CC,UAA7C,KAA+D,OAA/D,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB;AACA;AACA;AACA;AACA;AACA;AAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwBC,MAAxB,CAAgC,CAC9B,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,WAAL,CACE,GAAMC,CAAAA,QAAQ,CAAG,CAAEC,KAAK,CAAEJ,KAAK,CAACI,KAAN,CAAc,CAAvB,CAAjB,CACA,MAAOD,CAAAA,QAAP,CACF,IAAK,WAAL,CACE,MAAO,CAAEC,KAAK,CAAEJ,KAAK,CAACI,KAAN,CAAc,CAAvB,CAAP,CACF,QACE,KAAMC,CAAAA,KAAK,CAAC,0BAAD,CAAX,CAPJ,CASD,CACD,gBAA6BR,UAAU,CAACE,OAAD,CAAU,CAAEK,KAAK,CAAE,CAAT,CAAV,CAAvC,4CAAOE,QAAP,iBAAiBC,QAAjB,iBACA,cAAgCb,QAAQ,CAAC,KAAD,CAAxC,wCAAOc,QAAP,eAAiBC,WAAjB,eACA,GAAIC,CAAAA,GAAG,CAAGd,MAAM,CAAC,CAAD,CAAhB,CAEAD,SAAS,CAAC,UAAM,CACde,GAAG,CAACC,OAAJ,GACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBH,GAAtB,EAEA,MAAO,SAASI,CAAAA,OAAT,EAAmB,CACxB;AACAF,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBH,GAAxB,EACD,CAHD,CAID,CARQ,CAAT,CAUA,mBACE,oCACE,oCAAgBJ,QAAQ,CAACF,KAAzB,YADF,cAEE,eAAQ,OAAO,CAAE,yBAAMG,CAAAA,QAAQ,CAAC,CAAEL,IAAI,CAAE,WAAR,CAAD,CAAd,EAAjB,sBAFF,cAGE,aAHF,cAIE,eAAQ,OAAO,CAAE,yBAAMK,CAAAA,QAAQ,CAAC,CAAEL,IAAI,CAAE,WAAR,CAAD,CAAd,EAAjB,sBAJF,cAKE,aALF,cAOE,+BAAWM,QAAQ,CAAG,QAAH,CAAc,SAAjC,GAPF,cAQE,gBAAQ,OAAO,CAAE,yBAAMC,CAAAA,WAAW,CAAC,SAACM,IAAD,QAAU,CAACA,IAAX,EAAD,CAAjB,EAAjB,uBACYP,QAAQ,CAAG,YAAH,CAAkB,WADtC,GARF,GADF,CAcD,CA/CD,CAiDA,cAAeV,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect, useRef, useReducer } from \"react\";\n\n// const About = (props) => {\n//   const [state, setState] = useState({ count: 0, fruit: \"Banana\" });\n\n//   useEffect(() => {\n//     console.log(\"Rerender\");\n//   });\n\n//   function increaseCount() {\n//     setState((prevState) => {\n//       return { ...prevState, count: prevState.count + 1 };\n//     });\n//   }\n//   function decreaseCount() {\n//     setState((prevState) => {\n//       return { ...prevState, count: prevState.count - 1 };\n//     });\n//   }\n\n//   return (\n//     <div>\n//       <h1>About Page From Functional</h1>\n//       <p>Something About {state.fruit} </p>\n//       <p>The count is {state.count}</p>\n//       <button onClick={increaseCount}>Increase</button>\n//       <br />\n//       <button onClick={decreaseCount}>Decrease </button>\n//     </div>\n//   );\n// };\n\nconst About = () => {\n  // componentDidMount() {\n  //   document.title = `You clicked ${this.state.count} times`;\n  // }\n  // componentDidUpdate() {\n  //   document.title = `You clicked ${this.state.count} times`;\n  // }\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"INCREMENT\":\n        const newState = { count: state.count + 1 };\n        return newState;\n      case \"DECREMENT\":\n        return { count: state.count - 1 };\n      default:\n        throw Error(\"State Logic is Messed Up\");\n    }\n  }\n  const [appState, dispatch] = useReducer(reducer, { count: 0 });\n  const [isOnline, setIsOnline] = useState(false);\n  let ref = useRef(0);\n\n  useEffect(() => {\n    ref.current++;\n    console.log(\"Effect\", ref);\n\n    return function cleanUp() {\n      // Check for the condition`\n      console.log(\"Clean Up\", ref);\n    };\n  });\n\n  return (\n    <div>\n      <p>You clicked {appState.count} times</p>\n      <button onClick={() => dispatch({ type: \"INCREMENT\" })}>Increase</button>\n      <br />\n      <button onClick={() => dispatch({ type: \"DECREMENT\" })}>Decrease</button>\n      <br />\n\n      <p>Status {isOnline ? \"Online\" : \"Offline\"}</p>\n      <button onClick={() => setIsOnline((prev) => !prev)}>\n        Click to {isOnline ? \"go offline\" : \"go Online\"}\n      </button>\n    </div>\n  );\n};\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}