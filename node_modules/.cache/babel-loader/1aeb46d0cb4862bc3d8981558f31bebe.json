{"ast":null,"code":"import _objectSpread from\"/Users/keithburgess/Desktop/THSFolders/github-app-functional-backup/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/keithburgess/Desktop/THSFolders/github-app-functional-backup/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/keithburgess/Desktop/THSFolders/github-app-functional-backup/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/keithburgess/Desktop/THSFolders/github-app-functional-backup/node_modules/@babel/runtime/regenerator/index.js\";import React,{useReducer,useContext}from\"react\";import githubReducer from\"./GithubReducer\";import axios from\"axios\";import{ALL_USERS,SET_LOADING,SET_USER,RESET_USER,RESET_LOADING}from\"../types\";import GithubContext from\"./GithubContext\";import AlertContext from\"../Alert/AlertContext\";import{jsx as _jsx}from\"react/jsx-runtime\";var GithubState=function GithubState(props){var _useContext=useContext(AlertContext),setAlert=_useContext.setAlert;var initialState={users:[],loading:true,user:{},repos:[]};var _useReducer=useReducer(githubReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var getAllUsers=function getAllUsers(){axios.get(\"https://api.github.com/users\").then(function(res){dispatch({type:ALL_USERS,payload:res.data});}).catch(function(err){dispatch({type:RESET_LOADING});setAlert(\"danger\",\" Error in fetching data , Please try again\");});};var searchUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(query){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:SET_LOADING});if(!(query===\" \")){_context.next=4;break;}throw new Error(\" Enter a valid Username\");case 4:_context.next=6;return axios.get(\"https://api.github.com/search/users?q=\".concat(query));case 6:res=_context.sent;dispatch({type:ALL_USERS,payload:res.data.items});_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);dispatch({type:RESET_LOADING});setAlert(\"danger\",\" Please Enter a valid Github Username\");case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function searchUsers(_x){return _ref.apply(this,arguments);};}();var getUserInfo=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username){var user,repos;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:SET_LOADING});_context2.next=4;return axios.get(\"https://api.github.com/users/\".concat(username));case 4:user=_context2.sent;_context2.next=7;return axios.get(\"https://api.github.com/users/\".concat(username,\"/repos\"));case 7:repos=_context2.sent;dispatch({type:SET_USER,payload:{user:user.data,repos:repos.data}});_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);dispatch({type:RESET_LOADING});setAlert(\"danger\",\" Error fetching user information, Please use a valid user name\");case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function getUserInfo(_x2){return _ref2.apply(this,arguments);};}();var resetUserInfo=function resetUserInfo(){dispatch({type:RESET_USER});};return/*#__PURE__*/_jsx(GithubContext.Provider,{value:_objectSpread(_objectSpread({},state),{},{getAllUsers:getAllUsers,searchUsers:searchUsers,getUserInfo:getUserInfo,resetUserInfo:resetUserInfo}),children:props.children});};export default GithubState;","map":{"version":3,"sources":["/Users/keithburgess/Desktop/THSFolders/github-app-functional-backup/src/Context/Github/GithubState.js"],"names":["React","useReducer","useContext","githubReducer","axios","ALL_USERS","SET_LOADING","SET_USER","RESET_USER","RESET_LOADING","GithubContext","AlertContext","GithubState","props","setAlert","initialState","users","loading","user","repos","state","dispatch","getAllUsers","get","then","res","type","payload","data","catch","err","searchUsers","query","Error","items","getUserInfo","username","resetUserInfo","children"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext } from \"react\";\nimport githubReducer from \"./GithubReducer\";\nimport axios from \"axios\";\nimport {\n  ALL_USERS,\n  SET_LOADING,\n  SET_USER,\n  RESET_USER,\n  RESET_LOADING,\n} from \"../types\";\nimport GithubContext from \"./GithubContext\";\nimport AlertContext from \"../Alert/AlertContext\";\n\nconst GithubState = (props) => {\n  const { setAlert } = useContext(AlertContext);\n  const initialState = {\n    users: [],\n    loading: true,\n    user: {},\n    repos: [],\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n  const getAllUsers = () => {\n    axios\n      .get(\"https://api.github.com/users\")\n      .then((res) => {\n        dispatch({ type: ALL_USERS, payload: res.data });\n      })\n      .catch((err) => {\n        dispatch({ type: RESET_LOADING });\n        setAlert(\"danger\", \" Error in fetching data , Please try again\");\n      });\n  };\n  const searchUsers = async (query) => {\n    try {\n      dispatch({ type: SET_LOADING });\n      if (query === \" \") {\n        throw new Error(\" Enter a valid Username\");\n      }\n      let res = await axios.get(\n        `https://api.github.com/search/users?q=${query}`\n      );\n      dispatch({ type: ALL_USERS, payload: res.data.items });\n    } catch (error) {\n      dispatch({ type: RESET_LOADING });\n      setAlert(\"danger\", \" Please Enter a valid Github Username\");\n    }\n  };\n\n  const getUserInfo = async (username) => {\n    try {\n      dispatch({ type: SET_LOADING });\n      let user = await axios.get(`https://api.github.com/users/${username}`);\n      let repos = await axios.get(\n        `https://api.github.com/users/${username}/repos`\n      );\n      dispatch({\n        type: SET_USER,\n        payload: { user: user.data, repos: repos.data },\n      });\n    } catch (error) {\n      dispatch({ type: RESET_LOADING });\n      setAlert(\n        \"danger\",\n        \" Error fetching user information, Please use a valid user name\"\n      );\n    }\n  };\n\n  const resetUserInfo = () => {\n    dispatch({ type: RESET_USER });\n  };\n\n  return (\n    <GithubContext.Provider\n      value={{ ...state, getAllUsers, searchUsers, getUserInfo, resetUserInfo }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}