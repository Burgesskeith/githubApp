{"ast":null,"code":"import { ALL_USERS, SET_LOADING, SET_USER, RESET_USER, RESET_LOADING } from \"../types\";\n\nconst githubReducer = (state, action) => {\n  switch (action.type) {\n    case ALL_USERS:\n      return { ...state,\n        users: action.payload,\n        loading: false\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_USER:\n      return { ...state,\n        user: action.payload.user,\n        repos: action.payload.repos,\n        loading: false\n      };\n\n    case RESET_USER:\n      return { ...state,\n        user: {},\n        repos: []\n      };\n\n    case RESET_LOADING:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      throw Error(\"State Logic Error\");\n  }\n};\n\nexport default githubReducer;","map":{"version":3,"sources":["/Users/keithburgess/Desktop/THSFolders/github-app-functional-backup/src/Context/Github/GithubReducer.js"],"names":["ALL_USERS","SET_LOADING","SET_USER","RESET_USER","RESET_LOADING","githubReducer","state","action","type","users","payload","loading","user","repos","Error"],"mappings":"AAAA,SACEA,SADF,EAEEC,WAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,aALF,QAMO,UANP;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAFT;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELK,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKT,QAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELM,QAAAA,IAAI,EAAEL,MAAM,CAACG,OAAP,CAAeE,IAFhB;AAGLC,QAAAA,KAAK,EAAEN,MAAM,CAACG,OAAP,CAAeG,KAHjB;AAILF,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKR,UAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELM,QAAAA,IAAI,EAAE,EAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKT,aAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELK,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF;AACE,YAAMG,KAAK,CAAC,mBAAD,CAAX;AA/BJ;AAiCD,CAlCD;;AAoCA,eAAeT,aAAf","sourcesContent":["import {\n  ALL_USERS,\n  SET_LOADING,\n  SET_USER,\n  RESET_USER,\n  RESET_LOADING,\n} from \"../types\";\nconst githubReducer = (state, action) => {\n  switch (action.type) {\n    case ALL_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_USER:\n      return {\n        ...state,\n        user: action.payload.user,\n        repos: action.payload.repos,\n        loading: false,\n      };\n    case RESET_USER:\n      return {\n        ...state,\n        user: {},\n        repos: [],\n      };\n    case RESET_LOADING:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      throw Error(\"State Logic Error\");\n  }\n};\n\nexport default githubReducer;\n"]},"metadata":{},"sourceType":"module"}